################################################################################
# The minimum version of autoconf required to regenerate the configure script. #
################################################################################
#AC_PREREQ(2.59)

################################################################################
# Initialise autoconf, set package name, version number and contact details.   #
################################################################################
AC_INIT(Agility Record Book, 2.0.4.2448, [help@agilityrecordbook.com])

AC_CONFIG_SRCDIR(src/stdafx.cpp)

AC_SUBST(PACKAGE_SHORTNAME, "agilitybook")
AC_SUBST(PACKAGE_COPYRIGHT, "2002-2009 David Connet")
define([svnversion], esyscmd([sh -c "svnversion|tr -d '\n'"]))dnl
AC_SUBST(SVN_VERSION, "svnversion")
################################################################################
# Check for programs used to build my_prg                                      #
################################################################################
##########
# Check whether make sets the MAKE variable.
# Check which C++ compiler we have (sets CXX and CXXFLAGS)
# Check which RANLIB program we have
# Set the language for all further tests to C++
##########
AC_PROG_MAKE_SET
AC_PROG_CXX
AC_PROG_RANLIB
AC_PROG_INSTALL
AC_LANG(C++)
AC_ARG_PROGRAM

# Add macros to check for other programs here

################################################################################
# Checks for header files.                                                     #
################################################################################
# Add macros to check for header files here

################################################################################
# Checks for typedefs, structures, and compiler characteristics.               #
################################################################################
# Add macros to check for these characteristics here

################################################################################
# Checks for library functions.                                                #
################################################################################
# Add macros to check for library functions here
# We get these libs from our own src/ directories
# AC_CHECK_LIB([tidy], [tidyCreate])
# AC_CHECK_LIB([unittest], [RunAllTests])
if test "x$BOOSTINCLUDE" != "x"; then
	echo "BOOSTINCLUDE set to: $BOOSTINCLUDE"
	AC_SUBST(BOOSTINCLUDE, "-I$BOOSTINCLUDE")
	AC_SUBST(CXXFLAGS,"$CXXFLAGS $BOOSTINCLUDE")
fi
AC_CHECK_HEADERS(boost/weak_ptr.hpp, ,[AC_MSG_ERROR([boost/weak_ptr.hpp not found. export BOOSTINCLUDE=fullpath to boost install])])

case `uname` in
Darwin*)
	AC_SUBST(SHAREDLIBEXT, 'dylib')
	# build universal binaries on Mac OS
	AC_SUBST(CXXFLAGS, "$CXXFLAGS -isysroot /Developer/SDKs/MacOSX10.4u.sdk -mmacosx-version-min=10.3.9 -arch ppc -arch i386")
	AC_SUBST(LDFLAGS, ["-W1,syslibroot,/Developer/SDKs/MacOSX10.4u.sdk -arch ppc -arch i386"])
	# dependency generation not supported for g++ for universal binaries
	# For some reason ./configure --disable-dependency-generation is not supported by autoconf 2.63
	# so put dependencies checking under non-Darwin builds
	# Also no precompiled header support for universal binaries
	AC_SUBST(NOPRECOMP,1)
	#AC_SUBST(SHAREDLDFLAGS, "-prebind -dynamiclib")
	;;
*)
	##########
	# Check how dependencies are created for the C++ compiler on this system
	##########
	AS_IF(g++ -v -MP 2> /dev/null,
		[AC_SUBST(CPPDEPFLAGS, "-MMD -MP -MF \"\`dirname \$@\`/.deps/\`basename \$*\`.d\"")] [AC_SUBST(DEPDIR, ".deps")],
		[AC_SUBST(CPPDEPFLAGS, "-MMD")] [AC_SUBST(DEPDIR, ".")])
	AC_SUBST(SHAREDLIBEXT, 'so')
#	AC_SUBST(SHAREDLDFLAGS, "-shared -W1,-soname,$(.TARGET)")
	;;
esac
################################################################################
# Allow insertion of the global rules from NAM_rules.mk(.in) into any file     #
# that requests it using @NAM_RULES@.  Note that for this to work properly,    #
# NAM_rules.mk must be listed BEFORE any Makefiles that use this feature in    #
# the AC_CONFIG_FILES() macro below.                                           #
################################################################################
NAM_RULES=NAM_rules.mk
AC_SUBST_FILE(NAM_RULES)

################################################################################
# List of files to generate from the corresponding (*.in) files and the        #
# subsequent command to generate those files.                                  #
################################################################################
AC_CONFIG_FILES([NAM_rules.mk Makefile src/Makefile  src/ARB/Makefile src/Win/Makefile src/TestARB/Makefile src/cal_usdaa/Makefile src/Win/Info.plist src/Win/version.plist])

AC_OUTPUT
