# A script I use on the Mac to help manage multiple build environments.
# This allows working with the released version and also testing using
# the current SourceForge trunk. (Use svn to manage that)
#
# This will clean and configure the build directory for a wxWidget build.
# (I put this script in my home dir)
# Please note: Enabling unicode just doesn't seem to work right.
# If you type the following in and compile, it will demonstrate that
# (strip leading "#<space>")
# FROM HERE
# #include "wx/init.h"
# #include "wx/string.h"
# #if wxCHECK_VERSION(2, 9, 0)
# #include "wx/wxcrt.h"
# #endif
# int main(int argc, char** argv)
# {
# 	wxInitializer init;
# 	if (!init.IsOk())
# 	{
# 		printf("Init FAIL!\n");
# 		return 1;
# 	}
# #if wxUSE_UNICODE
# 	wxPuts(wxT("unicode - yes"));
# #else
# 	wxPuts(wxT("unicode - no"));
# #endif
# #if wxUSE_UNICODE_UTF8
# 	wxPuts(wxT("unicode-utf8 - yes"));
# #else
# 	wxPuts(wxT("unicode-utf8 - no"));
# #endif
# 	wxPuts(wxString::Format(wxT("sizeof wxChar: %d"), sizeof(wxChar)));
# 	wxPuts(wxT("Test: normal:"));
# 	wxPuts(wxString::Format(wxT("\t%%s %%s: %s %s"), wxT("second"), wxT("first")));
# 	wxPuts(wxT("Test: format change:"));
# 	wxPuts(wxString::Format(wxT("\t%%2$s %%1$s : %2$s %1$s"), wxT("second"), wxT("first")));
# 	return 0;
# }
# TO HERE

export BUILDDIR
export DEBUG
export UNICODESETTING
export VERSION=
export WXWIN=
USAGE="Usage $0 trunk|2.8 unicode|ansi [debug|release]"

if test "x$1" = "xtrunk"; then
	WXWIN=~/wx/trunk
	#10.4
	#VERSION="--disable-compat28 --disable-uiactionsim"
	#10.5
	VERSION="--disable-compat28"
elif test "x$1" = "x2.8"; then
	WXWIN=~/wx/wxWidgets-2.8.12
	VERSION="--disable-compat26"
else
	echo $USAGE
	exit
fi
BUILDDIR="$WXWIN/build"

if test "x$2" = "xunicode"; then
	BUILDDIR+="-unicode"
	UNICODESETTING="--enable-unicode"
elif test "x$2" = "xansi"; then
	BUILDDIR+="-ansi"
	UNICODESETTING="--disable-unicode"
else
	echo $USAGE
	exit
fi

if test "x$3" = "xdebug"; then
	DEBUG="--enable-debug --enable-debug_gdb"
	BUILDDIR+="-debug"
elif test "x$3" = "xrelease"; then
	DEBUG="--disable-debug_flag"
else
	$0 $1 $2 debug
	$0 $1 $2 release
	exit
fi

rm -rf $BUILDDIR
mkdir $BUILDDIR
cd $BUILDDIR

if test "x$1" = "xtrunk"; then
	COMPILERS=
	MINSDK="--with-macosx-version-min=10.5 --with-macosx-sdk=/Developer/SDKs/MacOSX10.5.sdk"
else
	COMPILERS="CC=gcc-4.0 CXX=g++-4.0 LD=g++-4.0"
	MINSDK="--with-macosx-version-min=10.4 --with-macosx-sdk=/Developer/SDKs/MacOSX10.4u.sdk"
fi

echo "Running: ../configure $COMPILERS --disable-shared $DEBUG $VERSION $UNICODESETTING --enable-universal_binary --with-regex=builtin --with-zlib=builtin --with-libiconv=no $MINSDK"

../configure $COMPILERS --disable-shared $DEBUG $VERSION $UNICODESETTING --enable-universal_binary --with-regex=builtin --with-zlib=builtin --with-libiconv=no $MINSDK
